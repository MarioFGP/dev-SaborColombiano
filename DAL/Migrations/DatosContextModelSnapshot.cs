// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(DatosContext))]
    partial class DatosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Entity.Detalle", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("FacturaNumeroFactura")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NumeroFacturacion")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("PrecioUnidad")
                        .HasColumnType("Decimal(38,17)");

                    b.Property<string>("ReferenciaInsumo")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ReferenciaPlatillo")
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("Total")
                        .HasColumnType("Decimal(38,17)");

                    b.HasKey("Codigo");

                    b.HasIndex("FacturaNumeroFactura");

                    b.ToTable("Detalles");
                });

            modelBuilder.Entity("Entity.Factura", b =>
                {
                    b.Property<string>("NumeroFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Concepto")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("FechaFacturacion")
                        .HasColumnType("DateTime");

                    b.Property<string>("IDEmpleado")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Total")
                        .HasColumnType("Decimal(38,17)");

                    b.HasKey("NumeroFactura");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Entity.Insumo", b =>
                {
                    b.Property<string>("Referencia")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("PrecioUnidad")
                        .HasColumnType("Decimal(38,17)");

                    b.HasKey("Referencia");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("Entity.Persona", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Correo")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Sueldo")
                        .HasColumnType("Decimal(38,17)");

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TipoPersona")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Identificacion");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Entity.Platillo", b =>
                {
                    b.Property<string>("Referencia")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Disponibilidad")
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("Decimal(38,17)");

                    b.HasKey("Referencia");

                    b.ToTable("Platillos");
                });

            modelBuilder.Entity("Entity.Usuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Entity.Detalle", b =>
                {
                    b.HasOne("Entity.Factura", null)
                        .WithMany("Detalles")
                        .HasForeignKey("FacturaNumeroFactura");
                });

            modelBuilder.Entity("Entity.Factura", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
